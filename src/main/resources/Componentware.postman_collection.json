{
	"info": {
		"_postman_id": "a3c29be4-8895-47cc-ad8f-2e1fa8b9e7f9",
		"name": "Componentware",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Kunde",
			"item": [
				{
					"name": "Alle Kunden",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const kunden = pm.response.json();\r",
									"\r",
									"pm.test('Anzahl der Kunden ist ' + kunden.length, function () {\r",
									"    pm.expect(kunden.length).to.equal(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/kunden",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"kunden"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kunde",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const host = pm.environment.get(\"host\");\r",
									"const port = pm.environment.get(\"port\");\r",
									"const base_url = pm.environment.get(\"base-url\");\r",
									"\r",
									"const kunde = {\r",
									"    \"nachname\": \"Schneider\",\r",
									"    \"vorname\": \"Thomas\",\r",
									"    \"geburtsdatum\": \"1998-03-11\",\r",
									"    \"email\": \"thomas08@gmail.com\"\r",
									"}\r",
									"\r",
									"const postRequest = {    \r",
									"  url: `${host}${port}${base_url}/kunden`,\r",
									"  method: 'POST',\r",
									"  header: {\r",
									"    'Content-Type': 'application/json',\r",
									"    'X-Foo': 'bar'\r",
									"  },\r",
									"  body: {\r",
									"    mode: 'raw',\r",
									"    raw: JSON.stringify(kunde)\r",
									"  }\r",
									"};\r",
									"\r",
									"pm.sendRequest(postRequest,\r",
									"    (err, response) => {\r",
									"        pm.test(\"Successful POST request\",() => {\r",
									"            pm.expect(response.code).to.be.oneOf([201, 202]);\r",
									"        }),\r",
									"\r",
									"        pm.test('Nachname der neuen Kunden ist ' + kunde.nachname, function () {\r",
									"            pm.expect(response.json().nachname).to.equal(\"Schneider\");\r",
									"        })\r",
									"    }\r",
									");\r",
									"\r",
									"// pm.test(\"Successful POST request\", function () {\r",
									"//     pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"// });\r",
									"\r",
									"// const kunde = pm.response.json();\r",
									"\r",
									"// pm.test('Nachname der neuen Kunden ist ' + kunde.nachname, function () {\r",
									"//     pm.expect(kunde.nachname).to.equal(\"Schneider\");\r",
									"// });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"nachname\": \"Schneider\",\r\n//     \"vorname\": \"Thomas\",\r\n//     \"geburtsdatum\": \"1998-03-11\",\r\n//     \"email\": \"thomas08@gmail.com\"\r\n// }\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/kunden",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"kunden"
							]
						}
					},
					"response": []
				},
				{
					"name": "Kunde",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const kunde = pm.response.json();\r",
									"\r",
									"pm.test('Der Kunde mit Nachname ' + pm.request.url.path[2] + ' existiert', function () {\r",
									"    pm.expect(kunde).not.equal(null);\r",
									"});\r",
									"\r",
									"pm.test('Vorname der Kunden ist ' + kunde[0].vorname, function () {\r",
									"    pm.expect(kunde[0].vorname).to.equal(\"Laura\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/kunden/:nachname",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"kunden",
								":nachname"
							],
							"variable": [
								{
									"key": "nachname",
									"value": "Mueller"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Kunde",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"\r",
									"const toChangeCustomer = pm.response.json();\r",
									"\r",
									"pm.test('Das neue Geburtsdatum der Kunden ist ' + toChangeCustomer.geburtsdatum, function () {\r",
									"    pm.expect(toChangeCustomer.geburtsdatum).to.equal(\"1993-12-10\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nachname\": \"Schneider\",\r\n    \"vorname\": \"Thomas\",\r\n    \"geburtsdatum\": \"1993-12-10\",\r\n    \"email\": \"thomas08@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/kunden/:id",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"kunden",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Kunde",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const host = pm.environment.get(\"host\");\r",
									"const port = pm.environment.get(\"port\");\r",
									"const base_url = pm.environment.get(\"base-url\");\r",
									"\r",
									"pm.sendRequest(\r",
									"    {url: `${host}${port}${base_url}/kunden/1`, method: 'DELETE'},\r",
									"    (err, response) => {\r",
									"        pm.test(\"Successful DELETE request\", () => {\r",
									"            pm.expect(response.status).to.eql('OK');\r",
									"        }),\r",
									"\r",
									"        pm.test(\"Der Kunde mit ID 1\" + \" wurde geloescht\"), () => {\r",
									"            pm.expect(response.json()).not.equal(null);\r",
									"        }\r",
									"    }\r",
									");\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/kunden/:id",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"kunden",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auto",
			"item": [
				{
					"name": "Alle Autos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const customers = pm.response.json();\r",
									"\r",
									"pm.test('Number of cars = ' + customers.length, function () {\r",
									"    pm.expect(customers.length).to.equal(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/autos",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"autos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"const newAuto = pm.response.json();\r",
									"\r",
									"pm.test('Das neue Auto ist vom Hersteller ' + newAuto.hersteller, () => {\r",
									"    pm.expect(newAuto.hersteller).to.equal(\"BMW\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{    \r\n    \"hersteller\": \"BMW\",\r\n    \"model\": \"X3\",    \r\n    \"sitzplaetzen\": 5,\r\n    \"anzahl\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/autos",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"autos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ein Auto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"const autos = pm.response.json();\r",
									"\r",
									"pm.test('Das Auto mit Model ' + autos[0].model + ' existiert', () => {\r",
									"    pm.expect(autos[0]).not.equal(null);\r",
									"});\r",
									"\r",
									"pm.test('Das Auto besitzt ' + autos[0].sitzplaetzen + ' Plaetze', () => {\r",
									"    pm.expect(autos[0].sitzplaetzen).to.equal(4);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/autos/:hersteller",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"autos",
								":hersteller"
							],
							"variable": [
								{
									"key": "hersteller",
									"value": "ford"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ein Auto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"\r",
									"const toChangeAuto = pm.response.json();\r",
									"\r",
									"pm.test('Das Automodel wurde zu ' + toChangeAuto.model + ' geaendert', function () {\r",
									"    pm.expect(toChangeAuto.model).to.equal('Explorer');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\r\n        \"hersteller\": \"Ford\",\r\n        \"model\": \"Explorer\",\r\n        \"sitzplaetzen\": 7,\r\n        \"anzahl\": 8       \r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/autos/:id",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"autos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ein Auto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const host = pm.environment.get(\"host\");\r",
									"const port = pm.environment.get(\"port\");\r",
									"const base_url = pm.environment.get(\"base-url\");\r",
									"\r",
									"pm.sendRequest(\r",
									"    {url: `${host}${port}${base_url}/autos/3`, method: 'DELETE'},       \r",
									"    (err, response) => {\r",
									"        pm.test(\"Successful DELETE request\", function () {\r",
									"            pm.expect(response.code).to.be.oneOf([200, 204]);\r",
									"        }),\r",
									"\r",
									"        pm.test('Das Auto mit ID ' + response.json().id + ' wurde geloescht'), () => {\r",
									"            pm.expect(response).not.equal(null);\r",
									"        }\r",
									"    }        \r",
									");\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/autos/:id",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"autos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Zahlungsarten",
			"item": [
				{
					"name": "Alle Arten",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const zahlungsarten = pm.response.json();\r",
									"\r",
									"pm.test('Anz der Zahlungsarten = ' + zahlungsarten.length, function () {\r",
									"    pm.expect(zahlungsarten.length).to.equal(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/zahlungsarten",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"zahlungsarten"
							]
						}
					},
					"response": []
				},
				{
					"name": "Zahlungsart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"const zahlungsart = pm.response.json();\r",
									"\r",
									"pm.test('Die neue Zahlungsart: ' + zahlungsart.beschreibung, function () {\r",
									"    pm.expect(zahlungsart.beschreibung).to.equal(\"bar\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"beschreibung\": \"bar\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/zahlungsarten",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"zahlungsarten"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eine Zahlungsart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const host = pm.environment.get(\"host\");\r",
									"const port = pm.environment.get(\"port\");\r",
									"const base_url = pm.environment.get(\"base-url\");\r",
									"\r",
									"pm.sendRequest(\r",
									"    {url: `${host}${port}${base_url}/zahlungsarten/1`, method: 'DELETE'},    \r",
									"    (err, response) => {\r",
									"        pm.test(\"Successful DELETE request\", function () {\r",
									"            pm.expect(response.code).to.be.oneOf([200, 204]);\r",
									"        }),\r",
									"        \r",
									"        pm.test('Die Zahlungsart mit ID ' + response.json().id + ' wurde geloescht'), () => {\r",
									"            pm.expect(response).to.be.an('object').but.not.an('array');\r",
									"        }\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/zahlungsarten/:id",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"zahlungsarten",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Zahlung",
			"item": [
				{
					"name": "Alle Zahlungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const zahlungen = pm.response.json();\r",
									"\r",
									"pm.test('Anz der Zahlungen = ' + zahlungen.length, function () {\r",
									"    pm.expect(zahlungen.length).to.equal(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/zahlungen",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"zahlungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eine Zahlung",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"const zahlung = pm.response.json();\r",
									"\r",
									"pm.test('Die neue Zahlung = ' + zahlung.betrag, function () {    \r",
									"    pm.expect(zahlung.betrag).to.equal(100.0);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"betrag\": 100.0,\r\n    \"bezahlt\": true   \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/zahlungsarten/:id/zahlungen",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"zahlungsarten",
								":id",
								"zahlungen"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Eine Zahlung",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"        pm.test(\"Successful PUT request\",() => {\r",
									"            pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"        }),\r",
									"\r",
									"        pm.test('Die Zahlung wurde aktualisiert'), () => {\r",
									"             pm.expect(response).to.have.property('betrag', 'bezahlt');\r",
									"             pm.expect(response).to.have.property('betrag').equal(100.0);\r",
									"        }"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"betrag\": 100.0,\r\n    \"bezahlt\": true \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/zahlungsarten/:zahlungsartId/zahlungen/:zahlungsId",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"zahlungsarten",
								":zahlungsartId",
								"zahlungen",
								":zahlungsId"
							],
							"variable": [
								{
									"key": "zahlungsartId",
									"value": "3"
								},
								{
									"key": "zahlungsId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Eine Zahlung",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const host = pm.environment.get(\"host\");\r",
									"const port = pm.environment.get(\"port\");\r",
									"const base_url = pm.environment.get(\"base-url\");\r",
									"\r",
									"pm.sendRequest(\r",
									"    {url: `${host}${port}${base_url}/zahlungen/2`, method: 'DELETE'},    \r",
									"    (err, response) => {\r",
									"        pm.test(\"Successful DELETE request\", function () {\r",
									"             pm.expect(response.status).to.eql('OK');\r",
									"        }),\r",
									"\r",
									"        pm.test('Die Zahlung wurde geloescht'), () => {\r",
									"            pm.expect(response).to.be.an('object').but.not.an('array');\r",
									"        }\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/zahlungen/:id",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"zahlungen",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bestellung",
			"item": [
				{
					"name": "Alle Bestellungen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const bestellungen = pm.response.json();\r",
									"\r",
									"pm.test('Anz der Zahlungen = ' + bestellungen.length, function () {\r",
									"    pm.expect(bestellungen.length).to.equal(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/bestellungen",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"bestellungen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eine Bestellung",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\",() => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"const neueBestellung = pm.response.json();\r",
									"\r",
									"pm.test('Eine neue Bestellung wurde angelegt'), () => {\r",
									"    pm.expect(neueBestellung).to.have.property('startdatum', 'dauer');\r",
									"    pm.expect(neueBestellung).to.have.property('dauer').equal(7);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"startdatum\": \"2021-12-20\",\r\n     \"dauer\": 7\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/kunden/:kundeId/autos/:autoId/zahlungen/:zahlungId/bestellungen",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"kunden",
								":kundeId",
								"autos",
								":autoId",
								"zahlungen",
								":zahlungId",
								"bestellungen"
							],
							"variable": [
								{
									"key": "kundeId",
									"value": "3"
								},
								{
									"key": "autoId",
									"value": "1"
								},
								{
									"key": "zahlungId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Alle Bestellungen eines Kunden",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.sendRequest(\r",
									"    { url: 'http://localhost:8080/api/bestellungen/kunden/1', method: 'GET'},\r",
									"    (response) => \r",
									"        pm.test(\"Successful POST request\",() => {\r",
									"            pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"        }),\r",
									"\r",
									"        pm.test('Eine neue Bestellung wurde angelegt'), () => {\r",
									"             pm.expect(response).not.equal(null);\r",
									"             pm.expect(response).to.have.property('auto_id').equal(2);\r",
									"        }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/bestellungen/kunden/:kundeid",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"bestellungen",
								"kunden",
								":kundeid"
							],
							"variable": [
								{
									"key": "kundeid",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Eine Bestellung",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\",() => {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"\r",
									"const bestellung = pm.response.json();\r",
									"\r",
									"pm.test('Die Zahlung wurde aktualisiert'), () => {\r",
									"    pm.expect(bestellung).not.equal(null);\r",
									"    pm.expect(bestellung).to.have.property('dauer').equal(5);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"startdatum\": \"2022-01-03\",\r\n     \"dauer\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/kunden/:kundeId/autos/:autoId/zahlungen/:zahlungId/bestellungen",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"kunden",
								":kundeId",
								"autos",
								":autoId",
								"zahlungen",
								":zahlungId",
								"bestellungen"
							],
							"variable": [
								{
									"key": "kundeId",
									"value": "3"
								},
								{
									"key": "autoId",
									"value": "1"
								},
								{
									"key": "zahlungId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Eine Bestellung",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const host = pm.environment.get(\"host\");\r",
									"const port = pm.environment.get(\"port\");\r",
									"const base_url = pm.environment.get(\"base-url\");\r",
									"\r",
									"pm.sendRequest(\r",
									"    {url: `${host}${port}${base_url}/kunden/3/autos/1/zahlungen/3/bestellungen`, method: 'DELETE'},           \r",
									"    (err, response) => {\r",
									"        pm.test(\"Successful DELETE request\", function () {\r",
									"            pm.expect(response.code).to.be.oneOf([200, 204]);\r",
									"        }),\r",
									"\r",
									"        pm.test('Die Zahlung wurde geloescht'), () => {            \r",
									"            pm.expect(response).to.be.an('object').but.not.an('array');\r",
									"            pm.expect(response).to.have.property('dauer').equal(5);\r",
									"        }\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}{{port}}{{base-url}}/kunden/:kundeId/autos/:autoId/zahlungen/:zahlungId/bestellungen",
							"host": [
								"{{host}}{{port}}{{base-url}}"
							],
							"path": [
								"kunden",
								":kundeId",
								"autos",
								":autoId",
								"zahlungen",
								":zahlungId",
								"bestellungen"
							],
							"variable": [
								{
									"key": "kundeId",
									"value": ""
								},
								{
									"key": "autoId",
									"value": ""
								},
								{
									"key": "zahlungId",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": ""
		}
	]
}